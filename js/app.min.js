/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Zoom Hover =========================================================================================================================\r\nif (document.querySelector('.details-card__swiper1')) {\r\n    (function ($) {\r\n        \"use strict\";\r\n        $.fn.extend({\r\n            extm: function extm(userOptions) {\r\n                //merge default and user options to 'options' var\r\n                var defaultOptions = {\r\n                    zoomElement: false,\r\n                    imageSrc: $(this).attr('src'),\r\n                    squareOverlay: false,\r\n                    position: false,\r\n                    rightPad: 0,\r\n                    lazy: false,\r\n                    zoomLevel: 1,\r\n                    zoomSize: false,\r\n                    loadingText: false,\r\n                    loadingImage: false\r\n                };\r\n                var options = $.extend({}, defaultOptions, userOptions || {});\r\n                function extmInit(options, imageElement) {\r\n                    var smallWidth = imageElement.width();\r\n                    var smallHeight = imageElement.height();\r\n                    var offset = imageElement.offset();\r\n                    var zoomElement;\r\n                    if (!options.zoomElement) {\r\n                        zoomElement = $(\"<div style='overflow:hidden;pointer-events:none;height:\" + smallHeight + \"px;width:\" + smallWidth + \"px;' class='extm'></div>\");\r\n                        if (options.position === 'right') {\r\n                            zoomElement.appendTo($('body'));\r\n                            zoomElement.css(\"position\", \"absolute\");\r\n                            zoomElement.css(\"top\", offset.top);\r\n                            zoomElement.css(\"left\", offset.left + smallWidth + options.rightPad);\r\n                        }\r\n                        else if (options.position === 'overlay') {\r\n                            zoomElement.appendTo($('body'));\r\n                            zoomElement.css(\"position\", \"absolute\");\r\n                            zoomElement.css(\"top\", offset.top);\r\n                            zoomElement.css(\"left\", offset.left);\r\n                        }\r\n                        else {\r\n                            zoomElement.insertAfter(imageElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        zoomElement = options.zoomElement;\r\n                    }\r\n                    var overlayElement;\r\n                    var innerOverlayElement;\r\n                    if (options.squareOverlay) {\r\n                        overlayElement = $(\"<div class='overlayElement' style='pointer-events:none;height:\" + smallHeight + \"px;width:\" + smallWidth + \"px;position:absolute;top:\" + offset.top + \"px;left:\" + offset.left + \"px;'></div>\");\r\n                        $('body').append(overlayElement);\r\n                        innerOverlayElement = $(\"<div style='background-color:rgba(0,0,0,0.2);position:absolute;' class='innerOverlay'></div>\");\r\n                        overlayElement.append(innerOverlayElement);\r\n                    }\r\n                    if (!options.lazy) {\r\n                        zoomElement.css(\"visibility\", \"hidden\"); //hide zoom holder\r\n                        if (options.squareOverlay) {\r\n                            innerOverlayElement.css(\"visibility\", \"hidden\"); //hide zoom holder\r\n                        }\r\n                    }\r\n                    if (options.zoomSize) {\r\n                        var fullSizeImage = $('<img style=\"position:relative;max-width:none;width:' + options.zoomSize + 'px;\">'); //make a large clone and insert it\r\n                    }\r\n                    else if (options.zoomLevel !== 1) {\r\n                        var fullSizeImage = $('<img style=\"position:relative;max-width:none;width:' + (100 * options.zoomLevel) + '%;\">'); //make a large clone and insert it\r\n                    }\r\n                    else {\r\n                        var fullSizeImage = $('<img style=\"position:relative;max-width:none;\">'); //make a large clone and insert it\r\n                    }\r\n                    if (options.imageSrc) {\r\n                        fullSizeImage.attr('src', options.imageSrc);\r\n                    }\r\n                    else {\r\n                        fullSizeImage.attr('src', imageElement.attr('src'));\r\n                    }\r\n\r\n                    fullSizeImage.appendTo(zoomElement);\r\n                    //using this closure to make sure the function gets the right 'imageElement' - in case there are many zooms per page\r\n                    (function (imageElement, zoomElement, fullSizeImage, overlayElement, smallHeight, smallWidth, offset, innerOverlayElement, options) {\r\n\r\n                        //while we wait for fullsize to load...\r\n                        if (options.loadingText) {\r\n                            var loadingElement = $(\"<div class='loadingElement' style='pointer-events:none;height:\" + smallHeight + \"px;width:\" + smallWidth + \"px;font-family:sans-serif;position:absolute;top:\" + offset.top + \"px;left:\" + offset.left + \"px;visibility:hidden;background:rgba(255,255,255,0.5);color:black;font-size:2em;font-weight:bold;text-align:center;'><p style='position: absolute; left: 50%;top: 50%;transform: translate(-50%, -50%);'>\" + options.loadingText + \"</p></div>\");\r\n                            $('body').append(loadingElement);\r\n                            imageElement.on('mouseenter', function () {\r\n                                loadingElement.css(\"visibility\", \"visible\");\r\n                            });\r\n                            imageElement.on('mouseleave', function () {\r\n                                loadingElement.css(\"visibility\", \"hidden\");\r\n                            });\r\n                            if (imageElement.is(':hover')) {\r\n                                imageElement.trigger(\"mouseenter\");\r\n                            }\r\n                        }\r\n                        else if (options.loadingImage) {\r\n                            var loadingElement = $(\"<div class='loadingElement' style='pointer-events:none;height:\" + smallHeight + \"px;width:\" + smallWidth + \"px;font-family:sans-serif;position:absolute;top:\" + offset.top + \"px;left:\" + offset.left + \"px;visibility:hidden;background:rgba(255,255,255,0.5);color:black;font-size:2em;font-weight:bold;text-align:center;'><img style='position: absolute; left: 50%;top: 50%;transform: translate(-50%, -50%);' src='\" + options.loadingImage + \"'/></div>\");\r\n                            $('body').append(loadingElement);\r\n                            imageElement.on('mouseenter', function () {\r\n                                loadingElement.css(\"visibility\", \"visible\");\r\n                            });\r\n                            imageElement.on('mouseleave', function () {\r\n                                loadingElement.css(\"visibility\", \"hidden\");\r\n                            });\r\n                            if (imageElement.is(':hover')) {\r\n                                imageElement.trigger(\"mouseenter\");\r\n                            }\r\n                        }\r\n\r\n                        fullSizeImage.on('load', function () {\r\n\r\n                            if (options.loadingText || options.loadingImage) {\r\n                                //remove our loading stuff\r\n                                imageElement.trigger(\"mouseleave\");\r\n                                imageElement.unbind('mouseenter mouseleave');\r\n                                loadingElement.remove();\r\n                            }\r\n\r\n                            imageElement.on('mouseenter', function () { //show/hide functionality\r\n                                //before we show the zoom element, lets make sure everything is still lined up \r\n                                //this is here in case things have moved since init, like if the user changed their browser width and things shuffled\r\n                                offset = imageElement.offset();\r\n                                if (options.position === 'right') {\r\n                                    zoomElement.css(\"top\", offset.top);\r\n                                    zoomElement.css(\"left\", offset.left + smallWidth + options.rightPad);\r\n                                }\r\n                                else if (options.position === 'overlay') {\r\n                                    zoomElement.css(\"top\", offset.top);\r\n                                    zoomElement.css(\"left\", offset.left);\r\n                                }\r\n                                if (options.squareOverlay) {\r\n                                    overlayElement.css(\"top\", offset.top);\r\n                                    overlayElement.css(\"left\", offset.left);\r\n                                }\r\n                                zoomElement.css(\"visibility\", \"visible\");\r\n                                if (options.squareOverlay) {\r\n                                    innerOverlayElement.css(\"visibility\", \"visible\");\r\n                                }\r\n                            });\r\n                            imageElement.on('mouseleave', function () {\r\n                                zoomElement.css(\"visibility\", \"hidden\");\r\n                                if (options.squareOverlay) {\r\n                                    innerOverlayElement.css(\"visibility\", \"hidden\");\r\n                                }\r\n                            });\r\n                            if (imageElement.is(':hover')) {\r\n                                imageElement.trigger(\"mouseenter\");\r\n                            }\r\n                            var fullSizeWidth = fullSizeImage.width(); //declare all of our vars... ratios and heights\r\n                            var fullSizeHeight = fullSizeImage.height();\r\n                            var wRatio = fullSizeWidth / smallWidth;\r\n                            var hRatio = fullSizeHeight / smallHeight;\r\n                            var wDifference = 0 - (fullSizeWidth - zoomElement.width());\r\n                            var hDifference = 0 - (fullSizeHeight - zoomElement.height());\r\n                            if (options.squareOverlay) {\r\n                                var innerOverlayW = (smallWidth / fullSizeWidth) * smallWidth;\r\n                                var innerOverlayH = (smallHeight / fullSizeHeight) * smallHeight;\r\n                                innerOverlayElement.css('height', innerOverlayH);\r\n                                innerOverlayElement.css('width', innerOverlayW);\r\n                            }\r\n                            imageElement.on('mousemove', function (event) { //on mousemove, use ratios and heights to move appropriately\r\n                                offset = imageElement.offset();\r\n                                var setTop = smallHeight / 2 - (event.pageY - offset.top) * hRatio;\r\n                                setTop = Math.max(setTop, hDifference);\r\n                                setTop = Math.min(setTop, 0);\r\n                                var setLeft = smallWidth / 2 - (event.pageX - offset.left) * wRatio;\r\n                                setLeft = Math.max(setLeft, wDifference);\r\n                                setLeft = Math.min(setLeft, 0);\r\n                                fullSizeImage.css('top', setTop);\r\n                                fullSizeImage.css('left', setLeft);\r\n                                if (options.squareOverlay) {\r\n                                    var squareTop = (event.pageY - offset.top) - innerOverlayElement.height() / 2;\r\n                                    squareTop = Math.max(squareTop, 0);\r\n                                    squareTop = Math.min(squareTop, smallHeight - innerOverlayElement.height());\r\n                                    var squareLeft = (event.pageX - offset.left) - innerOverlayElement.width() / 2;\r\n                                    squareLeft = Math.max(squareLeft, 0);\r\n                                    squareLeft = Math.min(squareLeft, smallWidth - innerOverlayElement.width());\r\n                                    innerOverlayElement.css('top', squareTop);\r\n                                    innerOverlayElement.css('left', squareLeft);\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                    }(imageElement, zoomElement, fullSizeImage, overlayElement, smallHeight, smallWidth, offset, innerOverlayElement, options));\r\n\r\n                    //destroy listener\r\n                    imageElement.on('extmdestroy', function () {\r\n                        zoomElement.remove();\r\n                        if (options.squareOverlay) {\r\n                            overlayElement.remove();\r\n                        }\r\n                    });\r\n\r\n                    //update image\r\n                    imageElement.on('updateImage', function (event, newUrl) {\r\n                        fullSizeImage.attr('src', newUrl);\r\n                    });\r\n                }\r\n                if (options.lazy) {\r\n                    if ($(this).width() > 10 && $(this).height() > 10) {\r\n                        $(this).one('mouseenter', function () {\r\n                            extmInit(options, $(this));\r\n                        });\r\n                    }\r\n                    else {\r\n                        $(this).one('load', function () {\r\n                            $(this).one('mouseenter', function () {\r\n                                extmInit(options, $(this));\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    if ($(this).width() > 10 && $(this).height() > 10) {\r\n                        extmInit(options, $(this));\r\n                    }\r\n                    else {\r\n                        $(this).one('load', function () {\r\n                            extmInit(options, $(this));\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            extmDestroy: function extmDestroy() {\r\n                $(this).trigger('extmdestroy');\r\n            },\r\n            extmImageUpdate: function (newUrl) {\r\n                $(this).trigger('updateImage', newUrl);\r\n            }\r\n        });\r\n    }(jQuery));\r\n}\r\n\r\n// ==========Динамічний адаптив=====================================================================================\r\nlet da_elements = document.querySelectorAll('[data-da]');\r\nlet parents_original = [];\r\nlet attr_elements = [];\r\nlet attr_element = [];\r\nlet match_media = [];\r\n\r\nfor (let item of da_elements) {\r\n    let parentChildren = item.parentElement.children;\r\n    for (let i = 0; i < parentChildren.length; i++) {\r\n        if (parentChildren[i] == item) {\r\n            parents_original.push({\r\n                'parent': item.parentElement,\r\n                'index': i\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfor (let item of da_elements) {\r\n    attr_elements.push(item.dataset.da);\r\n}\r\n\r\nfor (let i = 0; i < attr_elements.length; i++) {\r\n    match_media.push(window.matchMedia(\"(max-width:\" + attr_elements[i].split(', ')[2] + \"px)\"));\r\n    // match_media.push(window.matchMedia(\"(min-width:\" + attr_elements[i].split(', ')[2] + \"px)\")); // для MobileFirst\r\n    match_media[i].addEventListener('change', dinamic_adapt);\r\n}\r\n\r\nfunction dinamic_adapt() {\r\n    for (let i = 0; i < match_media.length; i++) {\r\n        if (match_media[i].matches) {\r\n            attr_element = attr_elements[i].split(', ');\r\n            document.querySelector(`.${attr_element[0]}`).insertBefore(da_elements[i], document.querySelector(`.${attr_element[0]}`).children[attr_element[1]]);\r\n        } else {\r\n            parents_original[i].parent.insertBefore(da_elements[i], parents_original[i].parent.children[parents_original[i].index]);\r\n        }\r\n    }\r\n}\r\ndinamic_adapt();\r\n\r\n// ==========Mobile Menu=====================================================================================\r\nlet header_burger = document.querySelector('.header__burger');\r\nlet body = document.querySelector('body');\r\nlet header_mob = document.querySelector('.header__mob');\r\n\r\nif (header_burger) {\r\n    header_burger.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        header_burger.classList.toggle('active');\r\n        body.classList.toggle('lock');\r\n        header_mob.classList.toggle('active');\r\n    })\r\n}\r\n\r\n// ==========IBG=====================================================================================\r\nlet ibg = document.querySelectorAll('.ibg');\r\n\r\nfor (let item of ibg) {\r\n    let ibgImg = item.querySelector('img');\r\n    let ibgImgSrc = ibgImg.getAttribute('src');\r\n    item.style.backgroundImage = `url(${ibgImgSrc})`;\r\n}\r\n\r\n// ==========Main-block Slider=====================================================================================\r\nif (document.querySelector('.main-block__swiper')) {\r\n    const mainBlockSwiper = new Swiper('.main-block__swiper', {\r\n        // Optional parameters\r\n        direction: 'vertical',\r\n        slidesPerView: 1,\r\n        loop: true,\r\n\r\n        // If we need pagination\r\n        pagination: {\r\n            el: '.main-block__pagination',\r\n            clickable: true,\r\n        },\r\n    });\r\n}\r\n\r\n\r\n// ==========Pagination Top=====================================================================================\r\nlet main_block_pagination = document.querySelector('.main-block__pagination');\r\nlet main_block_swiper = document.querySelector('.main-block__swiper');\r\n\r\nif (main_block_swiper) {\r\n    let item_main_block_body = main_block_swiper.querySelector('.item-main-block__body');\r\n\r\n    function paginationTop() {\r\n        main_block_pagination.style.paddingTop = `${(main_block_swiper.getBoundingClientRect().height - item_main_block_body.getBoundingClientRect().height + 12) / 2}px`;\r\n        main_block_pagination.style.paddingRight = `${item_main_block_body.getBoundingClientRect().left + 6}px`;\r\n    }\r\n\r\n    paginationTop();\r\n\r\n    window.addEventListener('resize', paginationTop);\r\n}\r\n\r\n// ==========Community-Block Slider=====================================================================================\r\nif (document.querySelector('.community-block__swiper')) {\r\n    const communityBlockSwiper = new Swiper('.community-block__swiper', {\r\n        // Optional parameters\r\n        slidesPerView: 3,\r\n        loop: true,\r\n        spaceBetween: 20,\r\n\r\n        // Navigation arrows\r\n        navigation: {\r\n            nextEl: '.community-block__btn_next',\r\n            prevEl: '.community-block__btn_prev',\r\n        },\r\n\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1,\r\n                spaceBetween: 0\r\n            },\r\n            480: {\r\n                slidesPerView: 1,\r\n                spaceBetween: 0\r\n            },\r\n            550: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 20\r\n            },\r\n            767: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 20\r\n            },\r\n            992: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 20\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// ==========Input Phone=====================================================================================\r\nlet phoneInput = document.querySelector('.phone-input');\r\n\r\nif (phoneInput) {\r\n    phoneInput.addEventListener('keydown', function (event) {\r\n        const key = event.key;\r\n        if ((isNaN(key) && key !== '+') || (key === ' ' && key !== '+')) {\r\n            event.preventDefault();\r\n        }\r\n        if (event.keyCode === 8) {\r\n            const value = event.target.value;\r\n            event.target.value = value.substring(0, value.length - 1);\r\n        }\r\n    });\r\n\r\n    phoneInput.addEventListener('input', function (event) {\r\n        const value = event.target.value;\r\n        const newValue = value.replace(/[^0-9\\+]/g, '');\r\n        if (newValue !== value) {\r\n            event.target.value = newValue;\r\n        }\r\n    });\r\n}\r\n\r\n// ==========Communities Slider=====================================================================================\r\nif (document.querySelector('.communities__swiper')) {\r\n    const communitiesSwiper = new Swiper('.communities__swiper', {\r\n        slidesPerView: 1,\r\n        pagination: {\r\n            el: '.communities__pagination',\r\n            clickable: true,\r\n            renderBullet: function (index, className) {\r\n                return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\n// ==========Communities-detail Slider=====================================================================================\r\nif (document.querySelector('.communities-detail__swiper')) {\r\n    const communitiesDetailSwiper = new Swiper('.communities-detail__swiper', {\r\n        slidesPerView: 1,\r\n        pagination: {\r\n            el: '.communities-detail__pagination',\r\n            clickable: true,\r\n            renderBullet: function (index, className) {\r\n                return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\r\n            },\r\n        },\r\n    });\r\n\r\n    //     const communitiesDetailSwiper = new Swiper('.communities-detail__swiper', {\r\n    //         slidesPerView: 1,\r\n    //         loop: true,\r\n    //         pagination: {\r\n    //             el: '.communities-detail__pagination',\r\n    //             clickable: true,\r\n    //             renderBullet: function (index, className) {\r\n    //                 const totalSlides = this.slides.length - 1;\r\n    //                 const currentIndex = this.realIndex;\r\n    // \r\n    //                 if (index === 0 || index === 1 || index === 2 || index === totalSlides) {\r\n    //                     return '<span class=\"' + className + '\">' + (currentIndex + index + 1) + '</span>';\r\n    //                 } else if (index === 3 && totalSlides > 3) {\r\n    //                     return '<span class=\"' + className + '\">...</span>';\r\n    //                 } else {\r\n    //                     return '';\r\n    //                 }\r\n    //             },\r\n    //         },\r\n    //     });\r\n}\r\n\r\n// ==========Details Card Slider===========================================================================================\r\nif (document.querySelector('.details-card__column_sliders')) {\r\n\r\n    $('.active_element').extm({\r\n        zoomElement: false,\r\n        imageSrc: $(undefined).attr('src'),\r\n        squareOverlay: false,\r\n        position: false,\r\n        rightPad: 0,\r\n        lazy: false,\r\n        zoomLevel: 1.5,\r\n        zoomSize: false,\r\n        loadingText: false,\r\n        loadingImage: false,\r\n    });\r\n\r\n\r\n    const detailsCardSwiper2 = new Swiper(\".details-card__swiper2\", {\r\n        slidesPerView: 4,\r\n        initialSlide: 2,\r\n        spaceBetween: 20,\r\n        loop: true,\r\n\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 15,\r\n            },\r\n            480: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 20,\r\n            },\r\n            550: {\r\n                slidesPerView: 4,\r\n                spaceBetween: 20,\r\n            },\r\n            768: {\r\n                slidesPerView: 4,\r\n                spaceBetween: 20,\r\n            },\r\n            992: {\r\n                slidesPerView: 4,\r\n                spaceBetween: 20,\r\n            }\r\n        }\r\n    });\r\n\r\n    const detailsCardSwiper1 = new Swiper(\".details-card__swiper1\", {\r\n        loop: true,\r\n\r\n        navigation: {\r\n            nextEl: \".details-card__btn_next\",\r\n        },\r\n\r\n        thumbs: {\r\n            swiper: detailsCardSwiper2,\r\n        },\r\n    });\r\n\r\n\r\n    let active_element2 = document.querySelector('.details-card__swiper1').querySelector('.swiper-slide-active').firstElementChild.firstElementChild.firstElementChild;\r\n\r\n    $(active_element2).extm({\r\n        zoomElement: false,\r\n        imageSrc: $(undefined).attr('src'),\r\n        squareOverlay: false,\r\n        position: false,\r\n        rightPad: 0,\r\n        lazy: false,\r\n        zoomLevel: 1.5,\r\n        zoomSize: false,\r\n        loadingText: false,\r\n        loadingImage: false,\r\n    });\r\n\r\n    detailsCardSwiper1.on(\"slideChange\", function () {\r\n        detailsCardSwiper2.slideTo(detailsCardSwiper1.activeIndex);\r\n\r\n        let active_element = document.querySelector('.details-card__swiper1').querySelector('.swiper-slide-active').nextElementSibling.firstElementChild.firstElementChild.firstElementChild;\r\n\r\n        $(active_element).extm({\r\n            zoomElement: false,\r\n            imageSrc: $(this).attr('src'),\r\n            squareOverlay: false,\r\n            position: false,\r\n            rightPad: 0,\r\n            lazy: false,\r\n            zoomLevel: 1.5,\r\n            zoomSize: false,\r\n            loadingText: false,\r\n            loadingImage: false,\r\n        });\r\n    });\r\n}\r\n\r\n//  ==========Zoom Slider==================================================================================================\r\nif (document.querySelector('.gallery')) {\r\n    baguetteBox.run('.gallery');\r\n}\r\n\r\n//  ==========Map =========================================================================================================\r\nif (document.getElementById('map')) {\r\n\r\n    function initMap() {\r\n\r\n        var myLatLng = { lat: Number(`${document.querySelector('.details-card__map').dataset.lat}`), lng: Number(`${document.querySelector('.details-card__map').dataset.lng}`) }; // координати місця, де повинна знаходитись точка\r\n\r\n        var map = new google.maps.Map(document.getElementById('map'), {\r\n            zoom: 7, // збільшення масштабу карти\r\n            center: myLatLng, // центруємо карту на заданих координатах\r\n            mapTypeControl: false,\r\n            streetViewControl: false,\r\n            fullscreenControl: false,\r\n            styles: [\r\n                {\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#f5f5f5\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"elementType\": \"labels.icon\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"visibility\": \"off\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#616161\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"elementType\": \"labels.text.stroke\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#f5f5f5\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"administrative.land_parcel\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#bdbdbd\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#eeeeee\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#757575\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.park\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#e5e5e5\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"poi.park\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#9e9e9e\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#ffffff\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road.arterial\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#757575\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road.highway\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#dadada\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road.highway\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#616161\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"road.local\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#9e9e9e\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"transit.line\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#e5e5e5\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"transit.station\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#eeeeee\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"water\",\r\n                    \"elementType\": \"geometry\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#c9c9c9\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"featureType\": \"water\",\r\n                    \"elementType\": \"labels.text.fill\",\r\n                    \"stylers\": [\r\n                        {\r\n                            \"color\": \"#9e9e9e\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n        });\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: myLatLng,\r\n            map: map,\r\n            icon: {\r\n                url: 'img/icons/map-icon.svg', // шлях до картинки\r\n                scaledSize: new google.maps.Size(240, 240), // розмір картинки\r\n                anchor: new google.maps.Point(120, 120) // Центр маркера\r\n            }\r\n        });\r\n    }\r\n\r\n    window.addEventListener('load', initMap());\r\n}\r\n\r\n// ==========Calendar=========================================================================================================\r\nlet calendar = document.querySelector('.calendar__input');\r\n\r\nif (calendar) {\r\n    $(\"#datepicker\").datepicker();\r\n}\r\n\r\n// ==========Your Info Check=========================================================================================================\r\nlet your_contact_info_input = document.querySelectorAll('.your-contact-info__input');\r\nlet your_contact_info_check = document.querySelectorAll('.your-contact-info__check');\r\n\r\nif (your_contact_info_input) {\r\n    your_contact_info_input.forEach(function (input) {\r\n        input.addEventListener('change', addCheck);\r\n        input.addEventListener('blur', addCheck);\r\n        input.addEventListener('focus', function () {\r\n            input.classList.remove('error');\r\n            input.classList.add('focus');\r\n        })\r\n    })\r\n\r\n    your_contact_info_check.forEach(function (check) {\r\n        check.addEventListener('click', function (event) {\r\n            check.classList.remove('show');\r\n            check.previousElementSibling.classList.remove('hide');\r\n            check.previousElementSibling.focus();\r\n        })\r\n    })\r\n\r\n    function addCheck() {\r\n        this.classList.remove('focus');\r\n\r\n        if (this.value) {\r\n            this.classList.add('hide');\r\n            this.nextElementSibling.classList.add('show');\r\n        }\r\n    }\r\n}\r\n\r\n// ==========Rental Form=========================================================================================================\r\nlet form_rental = document.querySelector('.form-rental');\r\n\r\nif (form_rental) {\r\n    form_rental.addEventListener('submit', function (event) {\r\n        event.preventDefault();\r\n\r\n        let couter = 0;\r\n\r\n        your_contact_info_input.forEach(function (info_input) {\r\n            if (!info_input.value) {\r\n                info_input.classList.add('error');\r\n                couter++;\r\n            }\r\n        })\r\n\r\n        if (!calendar.value) {\r\n            calendar.classList.add('error');\r\n            couter++;\r\n        }\r\n\r\n        if (couter <= 0) {\r\n            form_rental.reset();\r\n            your_contact_info_input.forEach(function (info_input) {\r\n                info_input.classList.remove('hide');\r\n                info_input.nextElementSibling.classList.remove('show');\r\n            })\r\n        }\r\n    })\r\n\r\n    calendar.addEventListener('focus', function () {\r\n        calendar.classList.remove('error');\r\n        calendar.classList.add('focus');\r\n    })\r\n\r\n    calendar.addEventListener('blur', function () {\r\n        calendar.classList.remove('focus');\r\n    })\r\n}\r\n\r\n\r\n// ==========Contacts Form=========================================================================================================\r\nlet contact_inputs = document.querySelectorAll('.form-contact__input');\r\n\r\nif (contact_inputs) {\r\n    contact_inputs.forEach(function (contact_input) {\r\n        contact_input.addEventListener('focus', function (event) {\r\n            contact_input.classList.add('focus')\r\n        })\r\n\r\n        contact_input.addEventListener('blur', function (event) {\r\n            contact_input.classList.remove('focus')\r\n        })\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;